created: 20160816215429452
creator: ronh
modified: 20200716152908355
modifier: ronh
revision: 0
tags: #GIT #Tech #Tidbit
title: GIT Notes Remote
type: text/vnd.tiddlywiki

{{||journalHeaderTemplate}}

<style>
.left { padding-left: 20px; margin-top: 0px;}
.gitcolor {color:magenta; font-weight:bold;}
.comcolor, pre {color:blue;}
.cmdcolor {color: green;}
</style>

<h1> Remotes </h1>

<pre>
# ### After the inital push you would normally do a fetch, then a merge with your local then a push
</pre>

<h2> Setting up a GitHub account </h2>

<h2> Adding a remote repository </h2>

<pre><span class="gitcolor">$ git remote</span>
<span class="gitcolor">$ git remote add origin # [[https://github.com/ronhenson/explore_california.git]]</span>
<span class="gitcolor">$ git remote -v</span>
    origin [[https://github.com/ronhenson/explore_california.git]] (fetch)
    origin  [[https://github.com/ronhenson/explore_california.git]] (push)
</span>
# ### To remove a remote
<span class="gitcolor">$ git remote rm origin</span>
</pre>

<h2> Creating a remote branch </h2>

<pre>
<span class="gitcolor">$ git push -u origin master</span>
    error: unable to read askpass response from '/usr/libexec/openssh/gnome-ssh-askpass'
Username for 'https://github.com': ronhenson
error: unable to read askpass response from '/usr/libexec/openssh/gnome-ssh-askpass'
Password for 'https://ronhenson@github.com': 
Counting objects: 197, done.
    Delta compression using up to 8 threads.
Compressing objects: 100% (195/195), done.
    Writing objects: 100% (197/197), 1.02 MiB | 0 bytes/s, done.
    Total 197 (delta 101), reused 0 (delta 0)
    To https://github.com/ronhenson/explore_california.git
     * [new branch]      master -&gt; master
    Branch master set up to track remote branch master from origin.

# ### After done pushing, click continue on github
# ### Show the remote branches
<span class="gitcolor">$ git branch -r </span>
# ### Show all branches
<span class="gitcolor">$ git branch -a</span>
</pre>

<h2> Cloning a remote repository </h2>

<pre>:
# ### find the clone address
<span class="gitcolor">$ git clone https://github.com/ronhenson/explore_california.git lynda_version</span>
    Cloning into 'lynda_version'...
        remote: Counting objects: 197, done.
        remote: Compressing objects: 100% (94/94), done.
        remote: Total 197 (delta 101), reused 197 (delta 101), pack-reused 0
        Receiving objects: 100% (197/197), 1.02 MiB | 1.82 MiB/s, done.
        Resolving deltas: 100% (101/101), done.
        Checking connectivity... done.

# ### By default it brings down the master branch
# ### You can use the -b option to specify a specific branch
</pre>

<h2> Tracking remote branches </h2>

<pre>
# ### Tells us that origin is tracking.
<span class="cmdcolor">$ cat .git/config</span>
    [branch "master"]
	remote = origin
	merge = refs/heads/master

# ### by not using the -u option in git push will be non-tracking
<span class="gitcolor">$ git branch non_tracking</span>

<span class="gitcolor">$ git push origin non_tracking</span>
    Total 0 (delta 0), reused 0 (delta 0)
    To [[https://github.com/ronhenson/explore_california.git]]
     * [new branch]      non_tracking -> non_tracking

# ### No listing for non_tracking
<span class="cmdcolor">$ cat .git/config</span>
    [core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
    [remote "origin"]
	url = https://github.com/ronhenson/explore_california.git
	fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
	remote = origin
	merge = refs/heads/master

# ### To make it tracking
<span class="gitcolor">$ git config branch.non_tracking.remote origin</span>
<span class="gitcolor">$ git config branch.non_tracking.merge refs/heads/master</span>
# ### OR
<span class="gitcolor">$ git branch --set-upstream non_tracking origin/non_tracking</span>
</pre>

<h2> Pushing changes to a remote repository </h2>

<pre>
# ### Made changes to tours.html and commit locally
<span class="gitcolor">$ git commit -am "Change file link format on tours.html"</span>
# ### push changes to origin/master
<span class="gitcolor">$ git push</span>
</pre>

<h2> Fetching changes from a remote repository </h2>

<pre>
# ### lynda_version changes aren't there yet
# ### The latest on the local machine since last update
<span class="gitcolor">$ git log --oneline -5 origin/master</span>
    11b3887 Merge branch 'text_edits'
    dbce1e6 Replace straight quotes with curly quotes
    02d9f0e Text edits on mission page
    cd9f702 Merge branch 'shorten_title'
    6f7b42c Edited contact.html title

<span class="gitcolor">$ git fetch</span>
    remote: Counting objects: 3, done.
    remote: Compressing objects: 100% (1/1), done.
    remote: Total 3 (delta 2), reused 3 (delta 2), pack-reused 0
    Unpacking objects: 100% (3/3), done.
    From [[https://github.com/ronhenson/explore_california]]
    11b3887..51b100f  master     -> origin/master
    * [new branch]      non_tracking -> origin/non_tracking

# ### Still not in the local master, only in the origin/master
# ### Three guidelines
# ### &gt; fetch before you work
# ### &gt; fetch before you push
# ### &gt; fetch often
</pre>

<h2> Merging in fetched changes </h2>

<pre>
<span class="gitcolor">$ git merge origin/master</span>
    Updating 11b3887..51b100f
    Fast-forward
    tours.html | 16 ++++++++--------
    1 file changed, 8 insertions(+), 8 deletions(-)
    14:27:20-ronh./lynda_version (master)$ git log --oneline master -3
    51b100f Change file link format on tours.html
    11b3887 Merge branch 'text_edits'
    dbce1e6 Replace straight quotes with curly quotes

# ### git pull does git fetch + git merge
<span class="gitcolor">$ git pull</span>
# ### Probably best to use fit fetch and git merge to get the idea what git pull does.
</pre>

<h2> Checking out remote branches </h2>

<pre>
# ### Create non_tracking and tracking branch
<span class="gitcolor">$ git branch non_tracking origin/non_tracking</span>
    Branch non_tracking set up to track remote branch non_tracking from origin.

<span class="gitcolor">$ git branch</span>
    * master
       non_tracking

<span class="gitcolor">$ git branch -d non_tracking</span>
    Deleted branch non_tracking (was 11b3887).

<span class="gitcolor">$ git branch</span>
    * master

# ### create tracking branch and put me on the non_tracking branch
<span class="gitcolor">$ git checkout -b non_tracking origin/non_tracking</span>
    Branch non_tracking set up to track remote branch non_tracking from origin.
    Switched to a new branch 'non_tracking'
</pre>

<h2> Pushing to an updated remote branch </h2>

<pre>
# ### Any commits on the remote will require a merge
</pre>

<h2> Deleting a remote branch </h2>

<pre>
<span class="gitcolor">$ git push origin :non_tracking</span>
To [[https://github.com/ronhenson/explore_california.git]]
# ### It is still in my local but gone from the remote
# ### The syntax comes from the git push origin non_tracking:non_tracking.  Push the local non_tracking to the remote non_tracking.  the : without anything in front deletes
# ### Push back up to the remote server
<span class="gitcolor">$ git push origin non_tracking</span>

</pre>
<h2> Enabling collaboration </h2>
<pre>
# ### You can add collaborators
# ### On opensource, you would do a fork.  Then you can update and finish.  Once finished, you can make a pull request with information on what you did.  Your project and source code is reivewed and if accepted will be pulled into the main project.
</pre>

<h2> A collaboration workflow </h2>
<pre>
# ### My Work
# ### &gt;  git checkout master
# ### &gt;  git  fetch
# ### &gt;  git  merge origin/master
# ### &gt;  git  checkout -b feedback_form
# ### --- Make changes
# ### &gt;  git  add feedback.html
# ### &gt;  git  commit -m "Add customer feedback form"
# ### &gt;  git  fetch 
# ### &gt;  git  push -u origin feedback_form

# ### Lynda's Work
# ### &gt; git checkout master
# ### &gt; git fetch
# ### &gt; git git branch -r
# ### &gt; git git merge origin/master
# ### &gt; git checkout -b feedback_form origin/feedback_form
# ### &gt; git log
# ### &gt; git show 84b6adf0
# ### --- Make a small change
# ### &gt; git commit -am :Add tour selector to feedback form"
# ### &gt; git fetch
# ### &gt; git push

# ### My Work
# ### &gt; git fetch
# ### --- Look at her changes before merging
# ### &gt; git log -p feedback_form..origin/feedback_form
# ### --- Changes look OK then pull it back to master
# ### &gt; git merge origin/feedback_form
# ### &gt; git fetch
# ### &gt; git merge origin/master
# ### &gt; git merge feedback_form
# ### &gt; git push
</pre>