caption: Mounting usb drives
created: 20180713004202761
creator: ronh
modified: 20200716152907614
modifier: ronh
revision: 0
tags: #WSL #BASH #Tidbit #Ubuntu
title: bash on Ubuntu on Windows 10 mounting
type: text/vnd.tiddlywiki

{{||journalHeaderTemplate}}

<p><a href="https://blogs.msdn.microsoft.com/wsl/2017/04/18/file-system-improvements-to-the-windows-subsystem-for-linux/">File System Improvements to the Windows Subsystem for Linux</a></p>

<h1> Mounting DrvFs </h1>

In order to mount a Windows drive using DrvFs, you can use the regular Linux mount command. For example, to mount a removable drive D: as /mnt/d directory, run the following commands:

<pre>$ sudo mkdir /mnt/d
$ sudo mount -t drvfs D: /mnt/d</pre>

Now, you will be able to access the files of your D: drive under /mnt/d. When you wish to unmount the drive, for example so you can safely remove it, run the following command:

<pre>$ sudo umount /mnt/d</pre>

<h1>Mounting network locations</h1>

When you wish to mount a network location, you can of course create a mapped network drive in Windows and mount that as indicated above. However, it's also possible to mount them directly using a UNC path:

<pre>$ sudo mount -t drvfs '\\server\share' /mnt/share</pre>

Note the single quotes around the UNC path; these are necessary to prevent the need to escape the backslashes. If you don't surround the UNC path with single quotes, you need to escape the backslashes by doubling them (e.g. `\\\\server\\share`).

WSL does not have any way to specify which credentials to use to connect to a network share. If you need to use different credentials to connect to the server, specify them in Windows by navigating to the share in File Explorer, using the Windows Credential Manager, or the <code>net use</code> command. The <code>net use</code> command can be invoked from inside WSL (using <code>net.exe use</code>) via interop. Type net.exe help use for more information on how to use this command.

<h1>Volumes mounted on empty NTFS folders</h1>

If your system has any volumes that do not have drive letters but are instead mounted on an empty NTFS folder, you are now able to mount those as well. WSL only automounts volumes with drive letters, so up to this change volumes mounted on a directory could not be accessed.

To now mount such a volume in WSL, simply use the path to its mount point:

<pre>$ sudo mount -t drvfs 'C:\mountpoint' /mnt/myvolume</pre>

Note that the path you specify must be a mount point; you cannot use an arbitrary directory as the root of a drvfs instance. If you wish to accomplish this, you can already do so using bind mounts.

<h1>DrvFs behavior for different file systems</h1>

The way drvfs behaves may be slightly different depending on the underlying file system. Certain features may not be available with all file systems. For example, the FAT file system is not case sensitive, and does not support hard links or symbolic links.

With network file systems, DrvFs does not set the correct Linux permissions bits on a file; instead, all files are reported with full access `(0777)` and the only way to determine if you can actually access the file is by attempting to open it. Network file systems are also not case sensitive and do not support symbolic links.