caption: Linux file permissions: getfacl and setfacl
created: 20170208025710865
creator: ronh
modified: 20200426215129804
modifier: ronh
revision: 0
tags: #SecurityIT #Permissions
title: Linux setting file acls
type: text/vnd.tiddlywiki

{{||journalHeaderTemplate}}

<style>
h1 {
	color:brown;
    }
.bash {
	background-color:#fff7f7;
    border:1px solid purple;
}
</style>

[[https://help.ubuntu.com/community/FilePermissionsACLs]]

! To view acls

<codeblock class="hljs bash">
getacl /data/file    # filename or directory
</codeblock>

! To add group permissions

```bash
setfacl -m -g:ronh:rwx /data/file       # group ronh to rwx
setfacl -R -m -g:ronh:rwx /data/file    # recursive
```

! Listing ACLs

The utility getfacl lists the ACLs for a given file or directory.

```bash
  $ getfacl /var/www
  getfacl: Removing leading '/' from absolute path names
  # file: var/www
  # owner: root
  # group: root
  user::rwx
  group::r-x
  group:green:rwx
  mask::rwx
  other::r-x
```

This following ACL also has defaults set:

```bash
 $ getfacl /var/www
 getfacl: Removing leading '/' from absolute path names
 # file: var/www
 # owner: root
 # group: root
 user::rwx
 group::r-x
 other::r-x
 default:user::rwx
 default:group::r-x
 default:group:green:rwx
 default:mask::rwx
 default:other::r-x
```
 
! Adding a Group to an ACL

The utility setfacl is used to add the groups blue and green to the ACL for the directory /var/www.

```bash
 $ sudo setfacl -m g:green:rwx /var/www/
 $ sudo setfacl -m g:blue:rwx /var/www/
 $ sudo getfacl /var/www/
 getfacl: Removing leading '/' from absolute path names
 # file: var/www/
 # owner: root
 # group: root
 user::rwx
 group::r-x
 group:green:rwx
 group:blue:rwx
 mask::rwx
 other::r-x
```
 
! Removing a Group from an ACL

The option -x removes groups or users from a given ACL. Below, the group green is removed from the directory /var/www.

```bash
 $ setfacl -x g:green /var/www
```
 
! Transfer of ACL attributes from a specification file

Transfer of ACL attributes from a specification file takes two steps. In this example, the specification file is called acl. 

First, create a file containing the ACL to be used.

```bash
 echo "g:green:rwx" > acl
```

Then, read the contents of the file into setfacl to set the ACL for directory /path/to/dir

```bash
  setfacl -M acl /path/to/dir
```

Output from getfacl is accepted, when reading from files using -M.

! Copying ACLs from one file or directory to another

Copy an ACL from dir1 to dir2 uses the -M option. Output from getfacl is accepted as input for setfacl when using -M.

```bash
 getfacl dir1 | setfacl -b -n -M - dir2
```

-b clear ACLs, -n do not recalculate effective rights mask, - read from stdin

Or it can be done like this:

```bash
getfacl file1 | setfacl --set-file=- file2
```

! Copying an ACL into the Default ACL

Once the ACLs are the way they need to be, they can be set as the default. Defaults are inherited, so a new directory will inherit the defaults of the parent directory.

```bash
 getfacl -a /path/to/dir | setfacl -d -M- /path/to/dir
 
 getfacl file1 | setfacl --set-file=- file2 
```

! Copying an ACL into the Default ACL

Once the ACLs are the way they need to be, they can be set as the default. Defaults are inherited, so a new directory will inherit the defaults of the parent directory.

```bash
 getfacl -a /path/to/dir | setfacl -d -M- /path/to/dir
```
