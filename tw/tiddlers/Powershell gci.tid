caption: Powershell gci tips
created: 20170818030006783
creator: ronh
modified: 20200716152909296
modifier: ronh
revision: 0
tags: #Windows #Tidbit #Tech
title: Powershell gci
type: text/vnd.tiddlywiki

<h1> <$link to={{!!title}}>{{!!caption}}</$link> </h1>
<$view field="created" format="date" template="Created: YYYY-0MM-0DD DDD"/><br />
<$view field="modified" format="date" template="Modified: YYYY-0MM-0DD DDD"/>

<h1> Example of using gci to output total of directory and subdirectories and format with commas </h1>

```Powershell
"{0:N0}" -f (gci -Recurse '.\' | Measure-Object -Property Length -Sum).Sum
413,669,483
```

<h1> Number of files </h1>

```Powershell
(gci -Recurse '.\' ).Count
```

<h1> Get all files and not directories </h1>

<h2> To get directories remove the <code>!</code> sign</h2>

```Powershell
gci * | where (! $_.PSIsContainer)
```

<h1> Get files and loop through </h1>

<p> This example loops through the files and removes <code>step4</code> or <code>step5</code> and write out content</p>

```Powershell
gci * | where (! $_.PSIsContainer) |
Foreach-Object {
    $content = Get-Content $_.FullName

    #filter and save content to the original file
    $content | Where-Object {$_ -match 'step[49]'} | Set-Content $_.FullName

    #filter and save content to a new file 
    $content | Where-Object {$_ -match 'step[49]'} | Set-Content ($_.BaseName + '_out.log')
}
```

<h1> loop through and encrypt files </h1>

<p> option to replace <code>--passphrase</code> with <code>--passphrase-file /path/filename</code> </p>

```Powershell
gci * | where (! $_.PSIsContainer) |
Foreach-Object {
	gpg.exe --batch --passphrase password --symmetric --cipher-algo AES256 $_.FullName
	if ($_.FullName + ".gpg") { Remove-Item $_.FullName}
}
```